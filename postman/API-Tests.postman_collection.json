{
  "info": {
    "name": "IFSight Government Solutions API Test Suite",
    "description": "Comprehensive API testing for IFSight.com government website solutions - Organized by test type",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://www.ifsight.com",
      "type": "string",
      "description": "Base URL for IFSight government solutions website"
    },
    {
      "key": "userAgent",
      "value": "IFSight-Government-Solutions-API-Tests/3.0",
      "type": "string",
      "description": "Government solutions API testing user agent"
    }
  ],
  "item": [
    {
      "name": "Smoke Tests",
      "description": "Critical path tests for basic functionality and availability - Quick validation suite",
      "item": [
        {
          "name": "Homepage Availability",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ],
            "description": "Critical homepage availability check"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Homepage loads successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time acceptable (< 5000ms)', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});",
                  "",
                  "pm.test('HTTPS enforced', function () {",
                  "    pm.expect(pm.request.url.toString()).to.include('https://');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "About Page Availability",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}/about-if",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('About page loads successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Basic page structure present', function () {",
                  "    const text = pm.response.text();",
                  "    pm.expect(text).to.include('<title>');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Services Page Availability",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}/solutions-and-services",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Services page accessible', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Services content available', function () {",
                  "    const responseText = pm.response.text();",
                  "    pm.expect(responseText).to.match(/services|solutions|development/i);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Contact Page Availability",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}/contact",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Contact page accessible', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Contact form present', function () {",
                  "    const html = pm.response.text();",
                  "    pm.expect(html).to.match(/input|email|contact.*form/i);",
                  "});",
                  "",
                  "pm.test('Secure contact methods available', function () {",
                  "    pm.expect(pm.request.url.toString()).to.include('https://');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Functional Tests",
      "description": "Detailed functionality and content validation tests - Comprehensive feature testing",
      "item": [
        {
          "name": "Homepage Content Validation",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ],
            "description": "Verify homepage content and branding"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Homepage loads successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Contains IFSight branding', function () {",
                  "    const text = pm.response.text();",
                  "    pm.expect(text).to.match(/IF|ifsight\\.com|if-tiny-color/i);",
                  "});",
                  "",
                  "pm.test('Government website solutions messaging present', function () {",
                  "    const text = pm.response.text();",
                  "    pm.expect(text).to.match(/government|Government|state|State|local|Local|digital.*services|solutions/i);",
                  "});",
                  "",
                  "pm.test('Has proper HTML5 document structure', function () {",
                  "    const text = pm.response.text();",
                  "    pm.expect(text).to.match(/<!DOCTYPE html>|<!doctype html>/i);",
                  "    pm.expect(text).to.include('<title>');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "About Page Content Validation",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}/about-if",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('About page loads successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Contains company information', function () {",
                  "    const text = pm.response.text();",
                  "    pm.expect(text).to.match(/IF|about|company|ifsight\\.com/i);",
                  "});",
                  "",
                  "pm.test('Company story and specialization present', function () {",
                  "    const text = pm.response.text();",
                  "    pm.expect(text).to.match(/Our Story|solutions|services|digital/i);",
                  "});",
                  "",
                  "pm.test('Professional credibility indicators', function () {",
                  "    const text = pm.response.text();",
                  "    pm.expect(text).to.match(/experience|expertise|proven|success|solutions/i);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Services Portfolio Content Validation",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}/solutions-and-services",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Services page accessible', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Service offerings listed', function () {",
                  "    const responseText = pm.response.text();",
                  "    pm.expect(responseText).to.match(/Product Development|Compliance|Technology|Digital.*Services|Solutions/i);",
                  "});",
                  "",
                  "pm.test('Government and public sector focus evident', function () {",
                  "    const responseText = pm.response.text();",
                  "    pm.expect(responseText).to.match(/state|local|government|public|sector|municipal|civic/i);",
                  "});",
                  "",
                  "pm.test('Professional service offerings structure', function () {",
                  "    const responseText = pm.response.text();",
                  "    pm.expect(responseText).to.match(/services|solutions|expertise|development|consulting|support/i);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Contact Form Functionality",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}/contact",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Contact page accessible', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Contact form present', function () {",
                  "    const html = pm.response.text();",
                  "    pm.expect(html).to.match(/input|email|contact.*form/i);",
                  "    pm.expect(html).to.include('email');",
                  "});",
                  "",
                  "pm.test('Contact information available', function () {",
                  "    const text = pm.response.text();",
                  "    pm.expect(text).to.match(/contact|info.*ifsight|email|ifsight\\.com/i);",
                  "});",
                  "",
                  "pm.test('Accessibility compliance', function () {",
                  "    const text = pm.response.text();",
                  "    pm.expect(text).to.match(/contact|phone|email|form|inquiry/i);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Security Tests",
      "description": "Security headers, SSL validation, and compliance requirements",
      "item": [
        {
          "name": "HTTPS Security Enforcement",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('HTTPS enforced for security', function () {",
                  "    pm.expect(pm.request.url.toString()).to.include('https://');",
                  "});",
                  "",
                  "pm.test('Secure connection established', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 301, 302]);",
                  "});",
                  "",
                  "pm.test('Security response time acceptable', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Security Headers Validation",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Content-Type header present', function () {",
                  "    pm.expect(pm.response.headers.get('Content-Type')).to.exist;",
                  "});",
                  "",
                  "pm.test('X-Content-Type-Options security header', function () {",
                  "    const header = pm.response.headers.get('X-Content-Type-Options');",
                  "    if (header) {",
                  "        pm.expect(header).to.equal('nosniff');",
                  "    }",
                  "});",
                  "",
                  "pm.test('Cache-Control header present', function () {",
                  "    pm.expect(pm.response.headers.get('Cache-Control')).to.exist;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Performance Tests",
      "description": "Performance benchmarks and optimization validation",
      "item": [
        {
          "name": "Homepage Performance Baseline",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Performance: Response time under 5 seconds', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});",
                  "",
                  "pm.test('Performance: Response size optimized', function () {",
                  "    pm.expect(pm.response.responseSize).to.be.below(1000000);",
                  "});",
                  "",
                  "pm.test('Performance: Content compression enabled', function () {",
                  "    const encoding = pm.response.headers.get('Content-Encoding');",
                  "    if (encoding) {",
                  "        pm.expect(encoding).to.be.oneOf(['gzip', 'deflate', 'br']);",
                  "    }",
                  "});",
                  "",
                  "// Log performance metrics",
                  "console.log(`Performance Metrics - Response Time: ${pm.response.responseTime}ms, Size: ${pm.response.responseSize} bytes`);"
                ]
              }
            }
          ]
        },
        {
          "name": "Government Standards Performance Check",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Government standard response time (< 3000ms)', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(3000);",
                  "});",
                  "",
                  "pm.test('Government compliance response codes', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 301, 302]);",
                  "});",
                  "",
                  "pm.test('Government accessibility performance', function () {",
                  "    // Ensure fast loading for accessibility",
                  "    pm.expect(pm.response.responseTime).to.be.below(4000);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "SEO Tests",
      "description": "SEO optimization and metadata validation for digital presence",
      "item": [
        {
          "name": "Website SEO Validation",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('SEO: Title tag present and contains branding', function () {",
                  "    const html = pm.response.text();",
                  "    pm.expect(html).to.include('<title>');",
                  "    pm.expect(html).to.match(/Home|IF|ifsight\\.com/i);",
                  "});",
                  "",
                  "pm.test('SEO: Meta description present', function () {",
                  "    const html = pm.response.text();",
                  "    pm.expect(html).to.match(/<meta[^>]*name=[\"']description[\"'][^>]*>/);",
                  "});",
                  "",
                  "pm.test('SEO: Viewport configuration for mobile', function () {",
                  "    const html = pm.response.text();",
                  "    pm.expect(html).to.include('viewport');",
                  "});",
                  "",
                  "pm.test('SEO: Proper heading structure', function () {",
                  "    const html = pm.response.text();",
                  "    pm.expect(html).to.include('<h1');",
                  "});",
                  "",
                  "pm.test('SEO: Government solutions keywords present', function () {",
                  "    const html = pm.response.text();",
                  "    pm.expect(html).to.match(/government|state|local|digital|solutions|services/i);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Sitemap Accessibility",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}/sitemap.xml",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Sitemap accessibility check', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    pm.test('Sitemap is valid XML format', function () {",
                  "        pm.expect(pm.response.text()).to.include('<?xml');",
                  "        pm.expect(pm.response.text()).to.include('<urlset');",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Robots.txt Configuration",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}/robots.txt",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Robots.txt accessibility check', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    pm.test('Robots.txt has proper format', function () {",
                  "        const text = pm.response.text();",
                  "        pm.expect(text).to.match(/User-agent:/i);",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Contact Form Tests",
      "description": "Contact form functionality and integration testing",
      "item": [
        {
          "name": "Contact Form Structure Validation",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}/contact",
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Contact form page accessible', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Contact form structure present', function () {",
                  "    const html = pm.response.text();",
                  "    pm.expect(html).to.match(/firstName|first.*name|name.*field|name.*input/i);",
                  "    pm.expect(html).to.match(/Email|email.*field|email.*input/i);",
                  "    pm.expect(html).to.match(/Message|message.*field|inquiry|textarea/i);",
                  "});",
                  "",
                  "pm.test('Accessibility standards met', function () {",
                  "    const html = pm.response.text();",
                  "    pm.expect(html).to.match(/label|aria|contact/i);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Contact Form Parameter Handling",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/contact?name=Government%20Agency%20Test&Email=government-test@ifsight.com&Confirm-Email=government-test@ifsight.com&Message=Government%20Solutions%20Inquiry%20-%20State%20and%20Local%20Digital%20Services",
              "host": ["{{baseUrl}}"],
              "path": ["contact"],
              "query": [
                {
                  "key": "name",
                  "value": "Government Agency Test"
                },
                {
                  "key": "Email",
                  "value": "government-test@ifsight.com"
                },
                {
                  "key": "Confirm-Email",
                  "value": "government-test@ifsight.com"
                },
                {
                  "key": "Message",
                  "value": "Government Solutions Inquiry - State and Local Digital Services"
                }
              ]
            },
            "header": [
              {
                "key": "User-Agent",
                "value": "{{userAgent}}"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Form handles parameters securely', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('No server errors in form processing', function () {",
                  "    pm.expect(pm.response.code).to.not.be.oneOf([500, 502, 503, 504]);",
                  "    pm.expect(pm.response.text()).to.not.match(/Internal Server Error|500 Error|Server Error/i);",
                  "});",
                  "",
                  "pm.test('Government client inquiry handled appropriately', function () {",
                  "    pm.expect(pm.request.url.toString()).to.include('https://');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Cross-Platform Tests",
      "description": "Testing website across different devices and platforms",
      "item": [
        {
          "name": "Mobile Device Compatibility",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}",
            "header": [
              {
                "key": "User-Agent",
                "value": "Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.2 Mobile/15E148 Safari/604.1"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Mobile: Website accessible on mobile devices', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Mobile: Responsive design implemented', function () {",
                  "    pm.expect(pm.response.text()).to.include('viewport');",
                  "});",
                  "",
                  "pm.test('Mobile: Performance acceptable for mobile users', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(7000);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Desktop Experience Validation",
          "request": {
            "method": "GET",
            "url": "{{baseUrl}}",
            "header": [
              {
                "key": "User-Agent",
                "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
              }
            ]
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Desktop: Website loads successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Desktop: Performance optimized for desktop users', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});",
                  "",
                  "pm.test('Desktop: User experience optimized', function () {",
                  "    const html = pm.response.text();",
                  "    pm.expect(html).to.match(/IF|government|solutions|digital|services|ifsight\\.com/i);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set timestamp for test tracking",
          "pm.globals.set('timestamp', new Date().toISOString());",
          "// Set testing context",
          "pm.globals.set('testContext', 'Government Solutions Validation - Organized Test Suite');"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global validation for all requests",
          "pm.test('Valid HTTP response status', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202, 204, 301, 302, 304, 404]);",
          "});",
          "",
          "// Log test execution data",
          "const suite = pm.info.requestName.includes('Smoke') ? 'SMOKE' :",
          "              pm.info.requestName.includes('Functional') ? 'FUNCTIONAL' :",
          "              pm.info.requestName.includes('Security') ? 'SECURITY' :",
          "              pm.info.requestName.includes('Performance') ? 'PERFORMANCE' :",
          "              pm.info.requestName.includes('SEO') ? 'SEO' :",
          "              pm.info.requestName.includes('Contact') ? 'CONTACT' :",
          "              pm.info.requestName.includes('Cross-Platform') ? 'CROSS-PLATFORM' : 'GENERAL';",
          "",
          "console.log(`[${suite}] ${pm.info.requestName} - ${pm.response.responseTime}ms - Status: ${pm.response.code}`);"
        ]
      }
    }
  ]
}

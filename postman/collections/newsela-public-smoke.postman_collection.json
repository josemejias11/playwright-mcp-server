{
  "info": {
    "name": "Newsela Public Smoke",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Public unauthenticated smoke checks for Newsela marketing/site endpoints. ~15 simple validations."
  },
  "variable": [{ "key": "baseUrl", "value": "{{baseUrl}}" }],
  "item": [
    {
      "name": "Home Page",
      "request": { "method": "GET", "url": "{{baseUrl}}/" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200', () => pm.response.to.have.status(200));",
              "pm.test('HTML content-type', () => pm.expect(pm.response.headers.get('Content-Type')).to.include('text/html'));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Robots.txt",
      "request": { "method": "GET", "url": "{{baseUrl}}/robots.txt" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200', () => pm.response.to.have.status(200));",
              "pm.test('Contains User-agent', () => pm.expect(pm.response.text()).to.include('User-agent'));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Sitemap.xml",
      "request": { "method": "GET", "url": "{{baseUrl}}/sitemap.xml" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200 or 301', () => pm.expect([200,301]).to.include(pm.response.code));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Static Asset (Favicon)",
      "request": { "method": "GET", "url": "{{baseUrl}}/favicon.ico" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200 or 404 (optional asset)', () => pm.expect([200,404]).to.include(pm.response.code));",
              "if(pm.response.code===200){ pm.test('Icon content-type', () => pm.expect(pm.response.headers.get('Content-Type')).to.match(/image|ico/)); }"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Health (Ping)",
      "request": { "method": "GET", "url": "{{baseUrl}}/ping" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200 or 404 acceptable', () => pm.expect([200,404]).to.include(pm.response.code));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Login Page",
      "request": { "method": "GET", "url": "{{baseUrl}}/login" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status expected or not found', () => pm.expect([200,301,302,404]).to.include(pm.response.code));",
              "if(pm.response.code===200){ pm.test('Contains login keyword', () => pm.expect(pm.response.text().toLowerCase()).to.include('login')); }"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Privacy Policy",
      "request": { "method": "GET", "url": "{{baseUrl}}/privacy-policy" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Reachable or not found', () => pm.expect([200,301,302,404]).to.include(pm.response.code));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Terms of Service",
      "request": { "method": "GET", "url": "{{baseUrl}}/terms-of-use" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Reachable or not found', () => pm.expect([200,301,302,404]).to.include(pm.response.code));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Pricing Page",
      "request": { "method": "GET", "url": "{{baseUrl}}/pricing" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status acceptable', () => pm.expect([200,301,302,404]).to.include(pm.response.code));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Careers Page",
      "request": { "method": "GET", "url": "{{baseUrl}}/careers" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status ok or redirect', () => pm.expect([200,301,302]).to.include(pm.response.code));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Contact Page",
      "request": { "method": "GET", "url": "{{baseUrl}}/contact" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status ok or redirect', () => pm.expect([200,301,302,403]).to.include(pm.response.code));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Blog Root",
      "request": { "method": "GET", "url": "{{baseUrl}}/blog" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status ok or redirect', () => pm.expect([200,301,302]).to.include(pm.response.code));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "API 404 Sample",
      "request": { "method": "GET", "url": "{{baseUrl}}/this-route-should-not-exist-404" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Intentional 404', () => pm.expect(pm.response.code).to.be.oneOf([404,301,302]));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Security Headers (Home)",
      "request": { "method": "GET", "url": "{{baseUrl}}/" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const csp = pm.response.headers.get('Content-Security-Policy');",
              "pm.test('Has some security headers', () => { pm.expect(pm.response.headers.has('X-Frame-Options') || pm.response.headers.has('x-frame-options')).to.be.true; });",
              "pm.test('CSP present (if served)', () => { if(csp){ pm.expect(csp.length).to.be.greaterThan(10); } });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Status Page (If Any)",
      "request": { "method": "GET", "url": "{{baseUrl}}/status" },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code acceptable', () => pm.expect([200,301,302,404]).to.include(pm.response.code));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
